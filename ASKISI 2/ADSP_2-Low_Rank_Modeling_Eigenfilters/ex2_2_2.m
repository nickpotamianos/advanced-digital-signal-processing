% Άσκηση 2: Εκτίμηση C_UU και κατασκευή ιδιοφίλτρου h

clear; close all; clc;

%% 1) Φόρτωση των υλοποιήσεων U(n)
load('U.mat');          % U ∈ R^(M×K)
[M, K] = size(U);

%% 2) Εκτίμηση δείγματος μέσου όρου & κεντράρισμα
mu_U = mean(U, 2);      % [M×1] δείγματος μέσος όρος
Uc   = U - mu_U;        % [M×K] κεντραρισμένα δείγματα

%% 3) Εκτίμηση μητρώου συνδιασπορών C_UU
C_UU = (Uc * Uc.') / (K - 1);   % [M×M]

%% 4) Ιδιοανάλυση για εξαγωγή του ιδιοφίλτρου h
[Q, Lambda] = eig(C_UU);        % Q: ιδιοδιανύσματα, Lambda: διαγώνιος ιδιοτιμές
[eigvals, idx] = sort(diag(Lambda), 'descend');
h = Q(:, idx(1));              % κύριο ιδιοφίλτρο (M×1)

%% 5) Σύνθεση των υλοποιήσεων X(n;φ_k)
n   = (0:M-1)';                      % δείκτες χρόνου
phi = 2*pi*rand(1, K);              % φ_k ~ U[0,2π)
W   = sqrt(0.1) * randn(M, K);      % λευκός θόρυβος με διασπορά 0.1
X   = sin(2*pi/1000 * n * ones(1,K) + ones(M,1) * phi) + W;

%% 6) Εφαρμογή του ιδιοφίλτρου σε κάθε υλοποίηση X(:,k)
Y = zeros(M, K);
for k = 1:K
    Y(:, k) = filter(h, 1, X(:, k));
end

%% 7) Εμφάνιση αποτελεσμάτων
fprintf('Μέγιστη ιδιοτιμή C_UU: %.4f\n', eigvals(1));
fprintf('Πρώτες 5 ιδιοτιμές:\n');
disp(eigvals(1:5));

%% (Προαιρετικά) Αποθήκευση
save('C_UU_estimate.mat', 'C_UU', 'h', 'eigvals');
save('Y_filtered.mat',   'Y');
